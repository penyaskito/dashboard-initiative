services:
  php:
    image: tugboatqa/php:8.1-apache
    default: true
    # Wait until the mysql service is done building
    depends: mysql
    commands:
      # Commands that set up the basic preview infrastructure
      init:
        # Install opcache and mod-rewrite.
        - docker-php-ext-install opcache
        - a2enmod headers rewrite

        # Link the document root to the expected path. This example links /web
        # to the docroot.
        - ln -snf "${TUGBOAT_ROOT}/web" "${DOCROOT}"

        # Create the Drupal private and public files directories if they aren't
        # already present.
        - mkdir -p "${TUGBOAT_ROOT}/files-private" "${DOCROOT}/sites/default/files"

        # Install/update packages managed by composer, including drush.
        - composer install --optimize-autoloader

        # Make a symlink to the drush binary
        - ln -snf "${TUGBOAT_ROOT}/vendor/bin/drush" /usr/local/bin/drush

        # Include our settings.local.php file.
        - echo "include \$app_root . '/' . \$site_path . '/settings.local.php';" >> web/sites/default/settings.php

      # Commands that import files, databases,  or other assets. When an
      # existing preview is refreshed, the build workflow starts here,
      # skipping the init step, because the results of that step will
      # already be present.
      update:
        # Use the tugboat-specific Drupal settings.
        - cp "${TUGBOAT_ROOT}/.tugboat/settings.local.php" "${DOCROOT}/sites/default/"

        # Set file permissions such that Drupal will not complain.
        - chgrp -R www-data "${DOCROOT}/sites/default/files"
        - find "${DOCROOT}/sites/default/files" -type d -exec chmod 2775 {} \;
        - find "${DOCROOT}/sites/default/files" -type f -exec chmod 0664 {} \;

        # Install the standard installation
        - drush site:install --yes --account-pass=admin standard
        - drush user:role:add administrator admin
        - drush entity-delete shortcut_set --yes
        - drush config:set system.site uuid 05104925-b5ef-447d-a96a-bb6b3eed6182 --yes
        - drush config:import --yes
        - drush php:eval 'include_once "core/profiles/standard/standard.install"; standard_install();'

        - drush user:create editor --password=editor
        - drush user:role:add content_editor editor

      # Commands that build the site. This is where you would add things
      # like feature reverts or any other drush commands required to
      # set up or configure the site. When a preview is built from a
      # base preview, the build workflow starts here, skipping the init
      # and update steps, because the results of those are inherited
      # from the base preview.
      build:
        - composer install --optimize-autoloader
        - drush updb --yes
        - drush cache:rebuild
        # Warm the caches to get a quicker first page load.
        - 'curl -H "Host: ${TUGBOAT_DEFAULT_SERVICE_URL_HOST}" http://localhost > /dev/null 2>&1'

  mysql:
    image: tugboatqa/mariadb:10.3
