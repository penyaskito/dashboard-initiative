on: [push, pull_request]
name: Tests and code
jobs:
  phpunit:
    runs-on: ubuntu-latest
    container:
      image: drupal:php8.1-apache-bullseye
      .before_script_template:
        before_script:
          - apt-get update -yqq
          - apt-get install -yqq git libpq-dev libcurl4-gnutls-dev libicu-dev libvpx-dev libjpeg-dev libpng-dev libxpm-dev zlib1g-dev libfreetype6-dev libxml2-dev libexpat1-dev libbz2-dev libgmp3-dev libldap2-dev unixodbc-dev libsqlite3-dev libaspell-dev libsnmp-dev libpcre3-dev libtidy-dev libonig-dev libzip-dev wget
          # Install PHP extensions
          - docker-php-ext-install mbstring curl intl gd xml bz2
          # Install & enable Xdebug for code coverage reports
          - pecl install xdebug
          - docker-php-ext-enable xdebug
          # Remove the memory limit for the CLI only.
          - echo 'memory_limit = -1' > /usr/local/etc/php/php-cli.ini
          # Install Robo CI.
          - wget https://robo.li/robo.phar
          - chmod +x robo.phar && mv robo.phar /usr/local/bin/robo
    services:
      mariadb:
        image: mariadb:latest
        env:
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - name: Update composer
        run: composer self-update --2

      - name: Build project
        run: robo job:build

      - name: Run PHPUnit tests
        run: vendor/bin/robo job:unit-tests

  code-standards:
    runs-on: ubuntu-latest
    container:
      image: drupal:php8.1-apache-bullseye
      .before_script_template:
        before_script:
          - apt-get update -yqq
          - apt-get install -yqq git libpq-dev libcurl4-gnutls-dev libicu-dev libvpx-dev libjpeg-dev libpng-dev libxpm-dev zlib1g-dev libfreetype6-dev libxml2-dev libexpat1-dev libbz2-dev libgmp3-dev libldap2-dev unixodbc-dev libsqlite3-dev libaspell-dev libsnmp-dev libpcre3-dev libtidy-dev libonig-dev libzip-dev wget
          # Install PHP extensions
          - docker-php-ext-install mbstring curl intl gd xml bz2
          # Install & enable Xdebug for code coverage reports
          - pecl install xdebug
          - docker-php-ext-enable xdebug
          # Remove the memory limit for the CLI only.
          - echo 'memory_limit = -1' > /usr/local/etc/php/php-cli.ini
          # Install Robo CI.
          - wget https://robo.li/robo.phar
          - chmod +x robo.phar && mv robo.phar /usr/local/bin/robo

    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - name: Update composer
        run: composer self-update --2

      - name: Build project
        run: robo job:build

      - name: Check coding standards
        run: vendor/bin/robo job:coding-standards

  code-coverage:
    runs-on: ubuntu-latest
    container:
      image: drupal:php8.1-apache-bullseye
      .before_script_template:
        before_script:
          - apt-get update -yqq
          - apt-get install -yqq git libpq-dev libcurl4-gnutls-dev libicu-dev libvpx-dev libjpeg-dev libpng-dev libxpm-dev zlib1g-dev libfreetype6-dev libxml2-dev libexpat1-dev libbz2-dev libgmp3-dev libldap2-dev unixodbc-dev libsqlite3-dev libaspell-dev libsnmp-dev libpcre3-dev libtidy-dev libonig-dev libzip-dev wget
          # Install PHP extensions
          - docker-php-ext-install mbstring curl intl gd xml bz2
          # Install & enable Xdebug for code coverage reports
          - pecl install xdebug
          - docker-php-ext-enable xdebug
          # Remove the memory limit for the CLI only.
          - echo 'memory_limit = -1' > /usr/local/etc/php/php-cli.ini
          # Install Robo CI.
          - wget https://robo.li/robo.phar
          - chmod +x robo.phar && mv robo.phar /usr/local/bin/robo

    services:
      mariadb:
        image: mariadb:latest
        env:
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - name: Update composer
        run: composer self-update --2

      - name: Build project
        run: robo job:build

      - name: Assess code coverage
        run: |
          vendor/bin/robo job:coverage-report

      - name: Archive code coverage results
        uses: actions/upload-artifact@v2
        with:
          name: coverage
          path: coverage

